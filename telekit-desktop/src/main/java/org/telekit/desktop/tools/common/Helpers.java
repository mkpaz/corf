package org.telekit.desktop.tools.common;

import javafx.scene.control.TextArea;
import org.telekit.base.domain.KeyValue;

import java.util.Map;
import java.util.Set;

import static org.apache.commons.lang3.StringUtils.*;
import static org.telekit.base.util.CSVUtils.COMMA_OR_SEMICOLON;
import static org.telekit.base.util.CSVUtils.addColumnsTheRight;
import static org.telekit.base.util.DesktopUtils.getFromClipboard;

public final class Helpers {

    public static boolean putTemplatePlaceholders(Map<String, String> accumulator, Set<Param> params) {
        boolean hasBlankValues = false;
        for (Param param : params) {
            KeyValue<String, String> kv = Param.resolve(param);
            accumulator.put(kv.getKey(), kv.getValue());
            if (!param.isAutoGenerated() && isBlank(param.getValue())) { hasBlankValues = true; }
        }
        return hasBlankValues;
    }

    public static void putCsvPlaceholders(Map<String, String> accumulator, String[] row) {
        for (int index = 0; index < row.length; index++) {
            accumulator.put("_csv" + index, row[index]);
        }
    }

    // Provides user an ability to include record index into template pattern.
    // _index0 - contains current row index, starting from 0
    // _index1 - contains current row index, starting from 1
    public static void putIndexPlaceholders(Map<String, String> accumulator, int idx) {
        accumulator.put("_index0", String.valueOf(idx));
        accumulator.put("_index1", String.valueOf(idx + 1));
    }

    public static void pasteFromExcel(TextArea textArea) {
        String clipboardText = getFromClipboard();
        if (isBlank(clipboardText)) { return; }

        String currentText = textArea.getText();
        String newText = trim(clipboardText.replaceAll("\t", ","));

        if (isEmpty(currentText)) {
            textArea.setText(newText);
        } else {
            textArea.replaceText(0, currentText.length(), newText);
        }
    }

    public static void pasteAsColumns(TextArea textArea) {
        String clipboardText = trim(getFromClipboard());
        if (isBlank(clipboardText)) { return; }

        String currentText = textArea.getText();

        if (isEmpty(currentText)) {
            textArea.setText(clipboardText);
        } else {
            int origLen = textArea.getText().length();
            String newText = addColumnsTheRight(currentText, clipboardText, COMMA_OR_SEMICOLON);
            textArea.replaceText(0, origLen, newText);
        }
    }
}
